name: Build and Deploy Discord Bot

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

env:
  NODE_VERSION: '22'

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Bot

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build TypeScript
        run: yarn build-tsup  # Adjust if you have a different build command

      - name: Create ZIP Archive of Build
        run: zip -r bot-build.zip dist/

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v3
        with:
          name: bot-build
          path: bot-build.zip  # Upload only the zip file to reduce file count

  deploy:
    runs-on: ubuntu-latest
    name: Deploy Bot to Azure VM
    needs: build

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: bot-build

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy to Azure VM
        env:
          HOST: ${{ secrets.SSH_HOST }}
          USER: ${{ secrets.SSH_USER }}
          PM2_APP_NAME: ${{ secrets.PM2_APP_NAME }}s
        run: |
          echo "Connecting to Azure VM"
          ssh -o StrictHostKeyChecking=no $USER@$HOST << 'EOF'
            # Source profile to ensure PATH includes Yarn, Node.js, and PM2
            source ~/.bashrc  # Or ~/.profile, depending on your setup

            # Confirm that the project directory exists
            cd /home/rafael52468/bh/bruce_helper  # Update with the correct path

            # Pull the latest changes from GitHub
            if [ -d ".git" ]; then
              git pull origin main
            else
              echo "Not a git repository. Skipping git pull."
            fi

            # Install dependencies (confirm Yarn is installed)
            which yarn || echo "Yarn is not installed or in the PATH"
            yarn install --frozen-lockfile

            # Build TypeScript files
            yarn build-tsup

            # Start or reload the bot process with PM2
            which pm2 || echo "PM2 is not installed or in the PATH"
            pm2 reload $PM2_APP_NAME --update-env || pm2 start dist/index.js --name $PM2_APP_NAME

            # Save PM2 state
            pm2 save
          EOF